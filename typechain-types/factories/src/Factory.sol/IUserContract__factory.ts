/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IUserContract,
  IUserContractInterface,
} from "../../../src/Factory.sol/IUserContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "verifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "agent",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IUserContract__factory {
  static readonly abi = _abi;
  static createInterface(): IUserContractInterface {
    return new Interface(_abi) as IUserContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IUserContract {
    return new Contract(address, _abi, runner) as unknown as IUserContract;
  }
}
