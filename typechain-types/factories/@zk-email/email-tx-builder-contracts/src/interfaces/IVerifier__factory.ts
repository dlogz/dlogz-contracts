/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IVerifier,
  IVerifierInterface,
} from "../../../../../@zk-email/email-tx-builder-contracts/src/interfaces/IVerifier";

const _abi = [
  {
    inputs: [],
    name: "commandBytes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "domainName",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "publicKeyHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "maskedCommand",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "emailNullifier",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "accountSalt",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "isCodeExist",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
        ],
        internalType: "struct EmailProof",
        name: "proof",
        type: "tuple",
      },
    ],
    name: "verifyEmailProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IVerifier__factory {
  static readonly abi = _abi;
  static createInterface(): IVerifierInterface {
    return new Interface(_abi) as IVerifierInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IVerifier {
    return new Contract(address, _abi, runner) as unknown as IVerifier;
  }
}
