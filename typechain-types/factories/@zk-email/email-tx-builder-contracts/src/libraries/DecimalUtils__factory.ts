/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  DecimalUtils,
  DecimalUtilsInterface,
} from "../../../../../@zk-email/email-tx-builder-contracts/src/libraries/DecimalUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "uintToDecimalString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decimal",
        type: "uint256",
      },
    ],
    name: "uintToDecimalString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610b1b610052600b82828239805160001a6073146045577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c80636f186a7914610045578063f41ce7db14610075575b600080fd5b61005f600480360381019061005a91906107d9565b6100a5565b60405161006c9190610896565b60405180910390f35b61008f600480360381019061008a91906108b8565b6100b9565b60405161009c9190610896565b60405180910390f35b60606100b28260126100b9565b9050919050565b606060006100c68461057d565b90506000815190506000848260ff16116100ec576002856100e79190610927565b6100fd565b6001826100f99190610968565b60ff165b67ffffffffffffffff8111156101165761011561099d565b5b6040519080825280601f01601f1916602001820160405280156101485781602001600182028036833780820191505090505b5090506000815190506000868460ff161161016e57838261016991906109cc565b610171565b60015b60ff16905060008060009050600060018561018c91906109cc565b90505b60008160ff16106104925760018a8660ff166101ab9190610a01565b6101b59190610a01565b8160ff1603610242578215610239577f2e00000000000000000000000000000000000000000000000000000000000000868260ff16815181106101fb576101fa610a35565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350818061023590610a64565b9250505b60009350610473565b898760ff16111580156102655750868561025c91906109cc565b60ff168160ff16105b156102e3577f3000000000000000000000000000000000000000000000000000000000000000868260ff16815181106102a1576102a0610a35565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535081806102db90610a64565b925050610472565b82806102ef5750600084145b156103785787848260ff166103049190610a01565b8151811061031557610314610a35565b5b602001015160f81c60f81b868260ff168151811061033657610335610a35565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350818061037090610a64565b925050610471565b7f300000000000000000000000000000000000000000000000000000000000000088858360ff166103a99190610a01565b815181106103ba576103b9610a35565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146104705787848260ff166103fc9190610a01565b8151811061040d5761040c610a35565b5b602001015160f81c60f81b868260ff168151811061042e5761042d610a35565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350818061046890610a64565b925050600192505b5b5b5b60008160ff16031561049257808061048a90610a8d565b91505061018f565b5060008160ff1667ffffffffffffffff8111156104b2576104b161099d565b5b6040519080825280601f01601f1916602001820160405280156104e45781602001600182028036833780820191505090505b50905060005b8260ff168160ff16101561056b57868160ff168151811061050e5761050d610a35565b5b602001015160f81c60f81b828260ff168151811061052f5761052e610a35565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506104ea565b50809850505050505050505092915050565b60606000600161058c8461064b565b01905060008167ffffffffffffffff8111156105ab576105aa61099d565b5b6040519080825280601f01601f1916602001820160405280156105dd5781602001600182028036833780820191505090505b509050600082602001820190505b600115610640578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161063457610633610ab6565b5b049450600085036105eb575b819350505050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106106a9577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161069f5761069e610ab6565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106106e6576d04ee2d6d415b85acef810000000083816106dc576106db610ab6565b5b0492506020810190505b662386f26fc10000831061071557662386f26fc10000838161070b5761070a610ab6565b5b0492506010810190505b6305f5e100831061073e576305f5e100838161073457610733610ab6565b5b0492506008810190505b612710831061076357612710838161075957610758610ab6565b5b0492506004810190505b60648310610786576064838161077c5761077b610ab6565b5b0492506002810190505b600a8310610795576001810190505b80915050919050565b600080fd5b6000819050919050565b6107b6816107a3565b81146107c157600080fd5b50565b6000813590506107d3816107ad565b92915050565b6000602082840312156107ef576107ee61079e565b5b60006107fd848285016107c4565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610840578082015181840152602081019050610825565b60008484015250505050565b6000601f19601f8301169050919050565b600061086882610806565b6108728185610811565b9350610882818560208601610822565b61088b8161084c565b840191505092915050565b600060208201905081810360008301526108b0818461085d565b905092915050565b600080604083850312156108cf576108ce61079e565b5b60006108dd858286016107c4565b92505060206108ee858286016107c4565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610932826107a3565b915061093d836107a3565b9250828201905080821115610955576109546108f8565b5b92915050565b600060ff82169050919050565b60006109738261095b565b915061097e8361095b565b9250828201905060ff811115610997576109966108f8565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006109d78261095b565b91506109e28361095b565b9250828203905060ff8111156109fb576109fa6108f8565b5b92915050565b6000610a0c826107a3565b9150610a17836107a3565b9250828203905081811115610a2f57610a2e6108f8565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a6f8261095b565b915060ff8203610a8257610a816108f8565b5b600182019050919050565b6000610a988261095b565b915060008203610aab57610aaa6108f8565b5b600182039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220167f51f21e11fe0e9bd9dd9cf6d06288d48e521d96a8979d233b403bc41410a464736f6c63430008190033";

type DecimalUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DecimalUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DecimalUtils__factory extends ContractFactory {
  constructor(...args: DecimalUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DecimalUtils & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DecimalUtils__factory {
    return super.connect(runner) as DecimalUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DecimalUtilsInterface {
    return new Interface(_abi) as DecimalUtilsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DecimalUtils {
    return new Contract(address, _abi, runner) as unknown as DecimalUtils;
  }
}
